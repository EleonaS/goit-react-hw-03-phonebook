{"version":3,"sources":["Components/Section/Section.styled.js","Components/Section/Section.js","Components/Container/Container.styled.js","Components/Container/Container.js","Components/Title/Title.styled.js","Components/Title/Title.js","Components/Form/Form.styled.js","Components/Form/Form.js","Components/Filter/Filter.styled.js","Components/Filter/Filter.js","Components/ContactList/ContactsList.styled.js","Components/ContactListItem/ContactListItem.js","Components/ContactList/ContactsList.js","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","section","Section","children","StyledContainer","div","Container","SectionTitle","h1","Title","title","Form","form","Label","label","Input","input","Button","button","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleFormSubmit","preventDefault","props","onSubmit","reset","this","type","onChange","pattern","placeholder","required","Component","Filter","filter","StyledList","ul","ListItem","li","ContactsListItem","id","onDeleteContact","onClick","ContactsList","contacts","map","App","checkContact","includedName","find","contact","toLowerCase","includedNumber","replace","toast","nanoid","prevState","handleChangeFilter","deleteContact","contactId","Contacts","JSON","parse","localStorage","getItem","setItem","stringify","normalizeFilter","foundContacts","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0066e8c2.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Wrapper = styled.section`\n  padding-top: 50px;\n  padding-bottom: 50px;\n`;\n\nexport { Wrapper };\n","import PropTypes from 'prop-types';\nimport { Wrapper } from './Section.styled';\n\nconst Section = ({ children }) => (\n  <Wrapper>{children}</Wrapper>\n);\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport { Section };\n","import styled from 'styled-components';\n\nconst StyledContainer = styled.div`\n  width: 1000px;\n  margin: 0 auto;\n  padding: 50px;\n  border-radius: 10px;\n  background-color: beige;\n  box-shadow: rgba(0, 0, 0, 0.3) 0 0\n    10px 5px;\n`;\n\nexport { StyledContainer };\n","import PropTypes from 'prop-types';\nimport { StyledContainer } from './Container.styled';\n\nconst Container = ({ children }) => (\n  <StyledContainer>\n    {children}\n  </StyledContainer>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport { Container };\n","import styled from 'styled-components';\n\nconst SectionTitle = styled.h1`\n  display: flex;\n  align-items: center;\n  color: green;\n  font-size: 30px;\n  font-weight: 600;\n  margin-bottom: 20px;\n`;\n\nexport { SectionTitle };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SectionTitle } from './Title.styled';\n\nconst Title = ({ title }) => (\n  <SectionTitle>{title}</SectionTitle>\n);\n\nTitle.propTypes = {\n  title: PropTypes.string,\n};\n\nexport { Title };\n","import styled from 'styled-components';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  margin-bottom: 40px;\n`;\n\nconst Label = styled.label`\n  font-size: 18px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Input = styled.input`\n  display: block;\n  width: 100%;\n  margin-bottom: 20px;\n  height: 40px;\n  padding-left: 10px;\n  border: 1px;\n  border-bottom: 1px solid green;\n  font-size: 20px;\n  color: black;\n  background-color: transparent;\n`;\n\nconst Button = styled.button`\n  align-items: center;\n  width: 200px;\n  padding: 5px 10px;\n  cursor: pointer;\n  border: 2px solid green;\n  border-radius: 7px;\n  font-size: 18px;\n  text-transform: uppercase;\n  color: black;\n  background-color: transparent;\n  transition: all 250ms ease-in-out;\n  &:hover {\n    border-color: gray;\n    color: green;\n    font-weight: 600;\n    background-color: white;\n  }\n`;\n\nexport { Label, Input, Button, Form };\n","import React, {\n  Component,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  Input,\n  Label,\n  Button,\n} from './Form.styled';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } =\n      e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <Form\n        onSubmit={this.handleFormSubmit}\n      >\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            placeholder=\"Enter name\"\n            required\n          />\n        </Label>\n        <Label>\n          Phone number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            placeholder=\"+111-111-11\"\n            required\n          />\n        </Label>\n        <Button type=\"submit\">\n          Add contact\n        </Button>\n      </Form>\n    );\n  }\n}\n\n/*ContactForm.propType = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};*/\n\nexport { ContactForm };\n","import styled from 'styled-components';\n\nconst Label = styled.label`\n  font-size: 18px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Input = styled.input`\n  width: 400px;\n  display: block;\n  margin-bottom: 20px;\n  height: 40px;\n  padding-left: 10px;\n  border: 1px;\n  border-bottom: 1px solid green;\n  font-size: 20px;\n  color: black;\n  background-color: transparent;\n`;\n\nexport { Label, Input };\n","import PropTypes from 'prop-types';\nimport {\n  Label,\n  Input,\n} from './Filter.styled';\n\nconst Filter = ({\n  filter,\n  onChange,\n}) => (\n  <Label>\n    Find contacts by name\n    <Input\n      type=\"text\"\n      value={filter}\n      onChange={onChange}\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      placeholder=\"\"\n    />\n  </Label>\n);\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport { Filter };\n","import styled from 'styled-components';\n\nconst StyledList = styled.ul`\n  list-style: none;\n  padding-left: 0;\n  font-size: 18px;\n`;\n\nconst ListItem = styled.li`\n  width: 500px;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  padding-bottom: 20px;\n  font-size: 18px;\n  cursor: pointer;\n  &:hover {\n    color: green;\n    /*font-weight:600;    \n  font-size: 24px;*/\n  }\n`;\n\nexport { StyledList, ListItem };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'Components/Form/Form.styled';\n\nconst ContactsListItem = ({\n  id,\n  name,\n  number,\n  onDeleteContact,\n}) => (\n  <>\n    {name}: {number}\n    <Button\n      type=\"button\"\n      onClick={() =>\n        onDeleteContact(id)\n      }\n    >\n      Delete\n    </Button>\n  </>\n);\n\nContactsListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  onDeleteContact:\n    PropTypes.func.isRequired,\n};\n\nexport { ContactsListItem };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  StyledList,\n  ListItem,\n} from './ContactsList.styled';\nimport { ContactsListItem } from 'Components/ContactListItem/ContactListItem';\n\nconst ContactsList = ({\n  contacts,\n  onDeleteContact,\n}) => (\n  <StyledList>\n    {contacts.map(\n      ({ name, number, id }) => (\n        <ListItem key={id}>\n          <ContactsListItem\n            id={id}\n            name={name}\n            number={number}\n            onDeleteContact={\n              onDeleteContact\n            }\n          />\n        </ListItem>\n      ),\n    )}\n  </StyledList>\n);\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      number:\n        PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func,\n};\n\nexport { ContactsList };\n","import React, {\n  Component,\n} from 'react';\nimport { nanoid } from 'nanoid';\nimport { Section } from 'Components/Section/Section';\nimport { Container } from 'Components/Container/Container';\nimport { Title } from 'Components/Title/Title';\nimport { ContactForm } from 'Components/Form/Form';\nimport { Filter } from 'Components/Filter/Filter';\nimport { ContactsList } from 'Components/ContactList/ContactsList';\n\nimport toast, {\n  Toaster,\n} from 'react-hot-toast';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const Contacts = JSON.parse(\n      localStorage.getItem('contacts'),\n    );\n\n    Contacts &&\n      this.setState({\n        contacts: Contacts,\n      });\n  }\n\n  componentDidUpdate(prevState) {\n    this.state.contacts !==\n      prevState.contacts &&\n      localStorage.setItem(\n        'contacts',\n        JSON.stringify(\n          this.state.contacts,\n        ),\n      );\n  }\n\n  checkContact = (name, number) => {\n    const { contacts } = this.state;\n\n    const includedName = contacts.find(\n      contact =>\n        contact.name.toLowerCase() ===\n        name.toLowerCase(),\n    );\n\n    const includedNumber =\n      contacts.find(\n        contact =>\n          contact.number.replace(\n            /[^0-9]/g,\n            '',\n          ) ===\n          number.replace(/[^0-9]/g, ''),\n      );\n\n    if (includedName) {\n      return toast(\n        `${name} is already in contacts`,\n      );\n    }\n\n    if (includedNumber) {\n      return toast(\n        `${number} is already in contacts`,\n      );\n    }\n  };\n\n  handleFormSubmit = ({\n    name,\n    number,\n  }) => {\n    const includedContact =\n      this.checkContact(name, number);\n\n    if (includedContact) {\n      return;\n    }\n    const id = nanoid();\n\n    this.setState(prevState => ({\n      contacts: [\n        ...prevState.contacts,\n        { id, name, number },\n      ],\n    }));\n  };\n\n  handleChangeFilter = e => {\n    this.setState({\n      filter: e.currentTarget.value,\n    });\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts:\n        prevState.contacts.filter(\n          contact =>\n            contact.id !== contactId,\n        ),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } =\n      this.state;\n    const normalizeFilter =\n      filter.toLowerCase();\n\n    const foundContacts =\n      contacts.filter(contact =>\n        contact.name\n          .toLowerCase()\n          .includes(normalizeFilter),\n      );\n\n    return (\n      <Section>\n        <Container>\n          <Title title={'Phonebook'} />\n          <ContactForm\n            onSubmit={\n              this.handleFormSubmit\n            }\n          />\n          <Toaster />\n          <Title title={`Contacts`} />\n          <Filter\n            value={filter}\n            onChange={\n              this.handleChangeFilter\n            }\n          />\n          <ContactsList\n            contacts={foundContacts}\n            onDeleteContact={\n              this.deleteContact\n            }\n          />\n        </Container>\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (\n    onPerfEntry &&\n    onPerfEntry instanceof Function\n  ) {\n    import('web-vitals').then(\n      ({\n        getCLS,\n        getFID,\n        getFCP,\n        getLCP,\n        getTTFB,\n      }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      },\n    );\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}